recursive::
    if count_intersections >= min_intersections && d <= n:
        return
    if no more adjacency points of d to put: 
        change device
        if new device already in some place:
            ::recursive
        else:
            for p in places and empty:
                put new device in p
                ::recursive
                take new device of p
    else:
        if adjacency point in some place:
            new line
            check intersection
            add new line
            ::recursive
            delete new line
        else:
            for p in places and empty:
                new line
                check intersection
                put adjacency point in p
                add new line
                ::recursive
                take adjacency point of p
                delete new line


main::

    for p in places:
        for d in places:
            put d in p
            ::recursive
            take d of p